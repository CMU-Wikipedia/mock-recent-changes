{"version":3,"sources":["components/diff.js","components/dataDisplay.jsx","App.js","serviceWorker.js","index.js","data/data-moreinfo.csv"],"names":["Diff","props","ipaddress","test","d","this","revision","undefined","LinearProgress","class","href","rev_id","target","title","ValidateIPaddress","username","timestamp","toLocaleTimeString","toLocaleDateString","weekday","year","month","day","comment","style","marginBottom","dangerouslySetInnerHTML","__html","className","diff","Component","DataDisplay","filters","show","colors","Set","color","models","Object","keys","i","length","j","pass","f","col","highlight","val","confidence_damage","confidence_faith","min","thresholds","max","comparison","checked","add","Array","from","map","c","fill","height","width","Typography","variant","component","backgroundColor","to","size","toLocaleString","signDisplay","display","data","obj","renderItem","theme","createMuiTheme","typography","root","fontFamily","subtitle1","fontSize","subtitle2","fontWeight","textTransform","textAlign","h6","body1","body2","button","fontStyle","h5","responsiveFontSizes","makeStyles","paper","padding","list","textDecoration","toolbar","spacing","App","toggle","bind","state","thresholdsFound","titles","damaging","goodfaith","experience","likelygood","description","maybebad","likelybad","verylikelybad","anonymous","loggedIn","newcomers","newcomer","experienced","model","filter","bound","axios","get","then","res","parseFloat","enwiki","statistics","true","threshold","toFixed","setState","getFilterThresholds","d3","data_sheet","faith_label","damaging_label","edit_years","Date","parsed_comment","range","event","value","basename","process","ThemeProvider","marginTop","borderTop","path","render","match","find","e","parseInt","params","id","FormControl","FormLabel","FormGroup","FormControlLabel","control","Checkbox","onClick","label","Select","onChange","changeColor","displayEmpty","renderValue","MenuItem","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.30aea923.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nimport \"../App.scss\";\nimport { LinearProgress } from \"@material-ui/core\";\n\nclass Diff extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  ValidateIPaddress(ipaddress) {\n    return /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(\n      ipaddress\n    );\n  }\n\n  render() {\n    const d = this.props.revision;\n    const h =\n      \"<tr class='header'><td class='before' colspan='2'>Before</td><td class='after' colspan='2'>After</td></tr>\";\n    if (d === undefined) return <LinearProgress />;\n    return (\n      <div class=\"diff\">\n        <div class=\"box\">\n          <strong>Revision ID: </strong>\n          <a\n            href={\n              \"https://en.wikipedia.org/w/index.php?title=&diff=prev&oldid=\" +\n              d.rev_id\n            }\n            target=\"_blank\"\n          >\n            {d.rev_id}\n          </a>\n          <div class=\"row\">\n            <div>\n              <strong>Article Title: </strong>\n              {d.title}\n            </div>\n          </div>\n          <h5>\n            Edited by{\" \"}\n            {this.ValidateIPaddress(d.username) ? \"Anonymous\" : d.username} at{\" \"}\n            {d.timestamp.toLocaleTimeString()} on{\" \"}\n            {d.timestamp.toLocaleDateString(undefined, {\n              weekday: \"long\",\n              year: \"numeric\",\n              month: \"long\",\n              day: \"numeric\",\n            })}\n          </h5>\n          {d.comment !== \"\" && (\n            <div style={{ marginBottom: 0 }}>\n              <strong>Comment from Editor:</strong>\n              <p dangerouslySetInnerHTML={{ __html: d.comment }} />\n            </div>\n          )}\n        </div>\n\n        <table\n          className=\"box\"\n          dangerouslySetInnerHTML={{ __html: h + d.diff }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Diff;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { LinearProgress, Typography } from \"@material-ui/core\";\nimport Dot from \"@material-ui/icons/FiberManualRecord\";\n\nclass DataDisplay extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderItem(d) {\n    if (!this.props.filters) return;\n    var show = true;\n    var filterCount = 0;\n    var colors = new Set();\n    var color = \"#ffffff\";\n\n    const models = Object.keys(this.props.filters);\n    for (var i = 0; i < models.length; i++) {\n      const filters = Object.keys(this.props.filters[models[i]]);\n      for (var j = 0; j < filters.length; j++) {\n        let pass = false;\n        const f = this.props.filters[models[i]][filters[j]];\n        const col = f.highlight;\n\n        if (models[i] !== \"experience\") {\n          const val =\n            models[i] === \"damaging\" ? d.confidence_damage : d.confidence_faith;\n          const min = f.thresholds.min;\n          const max = f.thresholds.max;\n          pass = !(val < min || val > max);\n        } else pass = f.comparison(d);\n\n        if (f.checked) {\n          filterCount++;\n          show = show && pass;\n        }\n\n        if (pass && col) {\n          color = col;\n          colors.add(col);\n        }\n      }\n    }\n\n    if (show)\n      return (\n        <div className=\"editLine\">\n          <div className=\"dots\">\n            {Array.from(colors).map((c) => (\n              <Dot style={{ fill: c, height: 10, width: 10 }} />\n            ))}\n          </div>\n\n          <Typography\n            variant=\"body1\"\n            component=\"li\"\n            style={{ backgroundColor: (color || \"#ffffff\") + \"44\" }}\n          >\n            (<Link to={\"/d/\" + d.rev_id}>diff</Link>) -{\" \"}\n            <strong>{d.title}</strong>\n            <em> by {d.username} </em>{\" \"}\n            <strong style={{ color: d.size >= 0 ? \"green\" : \"red\" }}>\n              ({d.size.toLocaleString(\"en-US\", { signDisplay: \"always\" })})\n            </strong>{\" \"}\n            <span dangerouslySetInnerHTML={{ __html: d.comment }} />\n          </Typography>\n        </div>\n      );\n    else return <li style={{ display: \"none\" }} />;\n  }\n\n  render() {\n    return (\n      <div className=\"box\">\n        {this.props.data ? (\n          this.props.data.map((obj) => this.renderItem(obj))\n        ) : (\n          <LinearProgress />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default DataDisplay;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport \"./App.scss\";\nimport data_sheet from \"./data/data-moreinfo.csv\";\nimport Diff from \"./components/diff\";\nimport DataDisplay from \"./components/dataDisplay\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Dot from \"@material-ui/icons/FiberManualRecord\";\nimport Highlight from \"@material-ui/icons/Colorize\";\n\nimport {\n  makeStyles,\n  Typography,\n  FormLabel,\n  FormControl,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  LinearProgress,\n  createMuiTheme,\n  responsiveFontSizes,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\n\nimport {\n  BrowserRouter,\n  HashRouter,\n  Route,\n  Link,\n  Switch,\n} from \"react-router-dom\";\n\nlet theme = createMuiTheme({\n  typography: {\n    root: {\n      component: \"div\",\n    },\n    fontFamily: \"Noto Sans KR\",\n    subtitle1: {\n      fontFamily: \"Noto Serif\",\n      fontSize: \"24px\",\n    },\n    subtitle2: {\n      fontSize: \"12px\",\n      marginBottom: \"10px\",\n      color: \"#C57619\",\n      fontWeight: \"bold\",\n      textTransform: \"uppercase\",\n      textAlign: \"left\",\n    },\n    h6: {\n      fontWeight: \"bold\",\n      fontSize: \"16px\",\n      textAlign: \"left\",\n    },\n    body1: {\n      textAlign: \"left\",\n      fontSize: 14,\n    },\n    body2: {\n      textAlign: \"left\",\n      fontSize: 12,\n    },\n    button: {\n      fontStyle: \"italic\",\n    },\n    h5: {\n      fontSize: \"15px\",\n      color: \"#3777a5\",\n      fontWeight: \"bold\",\n      textTransform: \"none\",\n      textAlign: \"left\",\n    },\n  },\n});\n\ntheme = responsiveFontSizes(theme);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    // fontFamily: 'Noto Sans, sans-serif',\n  },\n  paper: {\n    textAlign: \"left\",\n    padding: \"20px 20px\",\n  },\n  list: {\n    fontSize: \"16px\",\n    textDecoration: \"none\",\n  },\n  // necessary for content to be below app bar\n  toolbar: {\n    padding: theme.spacing(2),\n  },\n}));\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      data: null,\n      thresholdsFound: false,\n      titles: {\n        damaging: \"Edit quality predictions (damaging)\",\n        goodfaith: \"User intent predictions (good-faith)\",\n        experience: \"User registration and experience\",\n      },\n      filters: {\n        damaging: {\n          likelygood: {\n            thresholds: { min: 0, max: \"maximum recall @ precision >= 0.995\" },\n            checked: false,\n            highlight: null,\n            title: \"Very likely good\",\n            description:\n              \"Highly accurate at finding almost all problem-free edits\",\n          },\n          maybebad: {\n            thresholds: { min: \"maximum filter_rate @ recall >= 0.9\", max: 1 },\n            checked: false,\n            highlight: null,\n            title: \"May have problems\",\n            description:\n              \"Finds most flawed or damaging edits, but with lower accuracy\",\n          },\n          likelybad: {\n            thresholds: { min: \"maximum recall @ precision >= 0.6\", max: 1 },\n            checked: false,\n            highlight: null,\n            title: \"Likely have problems\",\n            description:\n              \"With medium accuracy, finds and intermediate fraction of problem edits\",\n          },\n          verylikelybad: {\n            thresholds: { min: \"maximum recall @ precision >= 0.9\", max: 1 },\n            checked: false,\n            highlight: null,\n            title: \"Very likely have problems\",\n            description:\n              \"Very accurate at finding the most obviously flawed or damaging edits\",\n          },\n        },\n        goodfaith: {\n          likelygood: {\n            thresholds: { min: \"maximum recall @ precision >= 0.995\", max: 1 },\n            checked: false,\n            highlight: null,\n            title: \"Very likely good faith\",\n            description:\n              \"Highly accurate at finding almost all good-faith edits\",\n          },\n          maybebad: {\n            thresholds: { min: 0, max: \"maximum filter_rate @ recall >= 0.9\" },\n            checked: false,\n            highlight: null,\n            title: \"May be bad faith\",\n            description: \"Finds most bad-faith edits but with a lower accuracy\",\n          },\n          likelybad: {\n            thresholds: { min: 0, max: \"maximum recall @ precision >= 0.6\" },\n            checked: false,\n            highlight: null,\n            title: \"Likely bad faith\",\n            description:\n              \"With medium accuracy, finds an intermediate fraction of bad-faith edits\",\n          },\n          verylikelybad: {\n            thresholds: { min: 0, max: 0 },\n            checked: false,\n            highlight: null,\n            title: \"Very likely bad faith\",\n            description:\n              \"Very accurate at finding the most obvious bad-faith edits\",\n          },\n        },\n        experience: {\n          anonymous: {\n            comparison: (d) => d.anonymous,\n            checked: false,\n            highlight: null,\n            title: \"Anonymous\",\n            description: \"Editors who aren't logged in\",\n          },\n          loggedIn: {\n            comparison: (d) => !d.anonymous,\n            checked: false,\n            highlight: null,\n            title: \"Registered\",\n            description: \"Logged-in editors\",\n          },\n          newcomers: {\n            comparison: (d) => d.newcomer,\n            checked: false,\n            highlight: null,\n            title: \"Newcomers\",\n            description: \"Editors with less than 8 years of experience\",\n          },\n          experienced: {\n            comparison: (d) => !d.newcomer,\n            checked: false,\n            highlight: null,\n            title: \"Experienced users\",\n            description: \"Editors with more than 8 years of experience\",\n          },\n        },\n      },\n    };\n  }\n\n  getFilterThresholds() {\n    var filters = this.state.filters;\n    for (const model in filters) {\n      for (const filter in filters[model]) {\n        for (const bound in filters[model][filter].thresholds) {\n          if (typeof filters[model][filter].thresholds[bound] === \"string\")\n            axios\n              .get(\n                \"https://ores.wikimedia.org/v3/scores/enwiki/?models=\" +\n                  model +\n                  '&model_info=statistics.thresholds.true.\"' +\n                  filters[model][filter].thresholds[bound] +\n                  '\"'\n              )\n              .then((res) => {\n                filters[model][filter].thresholds[bound] = parseFloat(\n                  res.data.enwiki.models[\n                    model\n                  ].statistics.thresholds.true[0].threshold.toFixed(3)\n                );\n              });\n        }\n      }\n    }\n    this.setState({ filters: filters, thresholdsFound: true });\n  }\n\n  componentDidMount() {\n    this.getFilterThresholds();\n    d3.csv(data_sheet, (d) => {\n      return {\n        confidence_faith: +d.confidence_faith,\n        faith_label: d.goodfaith === \"TRUE\" ? true : false,\n        confidence_damage: +d.confidence_damage,\n        damaging_label: d.damaging === \"TRUE\" ? true : false,\n        rev_id: +d.rev_id,\n        anonymous: d.anonymous === \"TRUE\" ? true : false,\n        newcomer: d.edit_years <= 8.0 ? true : false,\n        username: d.username,\n        title: d.title,\n        timestamp: new Date(d.timestamp),\n        size: +d.size,\n        comment: d.parsed_comment,\n        diff: d.diff,\n      };\n    }).then((data) => this.setState({ data: data }));\n  }\n\n  toggle(model, range) {\n    var filters = this.state.filters;\n    filters[model][range].checked = !filters[model][range].checked;\n    this.setState({ filters: filters });\n  }\n\n  changeColor(model, range, event) {\n    var filters = this.state.filters;\n    filters[model][range].highlight = event.target.value;\n    this.setState({ filters: filters });\n  }\n\n  render() {\n    let data = this.state.data || [];\n    let filters = this.state.filters || {};\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL + \"/\"}>\n        <ThemeProvider theme={theme}>\n          <div className=\"App\">\n            <div\n              className=\"box\"\n              style={{ marginTop: \"-2em\", borderTop: \"none\" }}\n            >\n              <Link to=\"/\">\n                <Typography variant=\"subtitle1\">Recent Changes</Typography>\n              </Link>\n            </div>\n\n            <Switch>\n              {data && data !== undefined && (\n                <Route\n                  path=\"/d/:id\"\n                  render={({ match }) => (\n                    <Diff\n                      revision={data.find(\n                        (e) => e.rev_id === parseInt(match.params.id)\n                      )}\n                    />\n                  )}\n                />\n              )}\n\n              <Route path=\"/\">\n                {this.state.thresholdsFound ? (\n                  <FormControl className=\"filter\">\n                    {Object.keys(filters).map((model) => (\n                      <div className=\"modelGroup box\">\n                        <FormLabel>\n                          <Typography variant=\"subtitle2\">\n                            {this.state.titles[model]}\n                          </Typography>\n                        </FormLabel>\n                        <FormGroup>\n                          {Object.keys(filters[model]).map((range) => (\n                            <div className=\"filterItem\">\n                              <FormControlLabel\n                                className=\"filterBox\"\n                                control={\n                                  <Checkbox\n                                    onClick={() => this.toggle(model, range)}\n                                    value={filters[model][range].checked}\n                                  />\n                                }\n                                label={\n                                  <div>\n                                    <Typography variant=\"h6\">\n                                      {filters[model][range].title}\n                                    </Typography>\n                                    <Typography variant=\"body2\">\n                                      {filters[model][range].description}\n                                    </Typography>\n                                  </div>\n                                }\n                              />\n                              <Select\n                                className=\"highlightBox\"\n                                value={filters[model][range].highlight}\n                                onChange={(event) =>\n                                  this.changeColor(model, range, event)\n                                }\n                                displayEmpty=\"true\"\n                                renderValue={(value) => {\n                                  if (value)\n                                    return <Dot style={{ fill: value }} />;\n                                  else return <Highlight />;\n                                }}\n                              >\n                                {[\n                                  null,\n                                  \"#495cd0\",\n                                  \"#43b286\",\n                                  \"#f6d00e\",\n                                  \"#f06d1f\",\n                                  \"#ce2d37\",\n                                ].map((color) => (\n                                  <MenuItem value={color}>\n                                    <Dot style={{ fill: color || \"#fff\" }} />\n                                  </MenuItem>\n                                ))}\n                              </Select>\n                            </div>\n                          ))}\n                        </FormGroup>\n                      </div>\n                    ))}\n                  </FormControl>\n                ) : (\n                  <LinearProgress />\n                )}\n                <DataDisplay data={data} filters={filters} />\n              </Route>\n            </Switch>\n          </div>\n        </ThemeProvider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/data-moreinfo.76afb407.csv\";"],"sourceRoot":""}