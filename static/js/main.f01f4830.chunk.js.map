{"version":3,"sources":["data/data-moreinfo.csv","components/diff.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Diff","props","ipaddress","test","d","this","revision","undefined","LinearProgress","class","href","rev_id","target","title","ValidateIPaddress","username","timestamp","toLocaleTimeString","toLocaleDateString","weekday","year","month","day","comment","dangerouslySetInnerHTML","__html","diff","Component","theme","createMuiTheme","typography","root","component","fontFamily","subtitle1","fontSize","subtitle2","marginTop","color","fontWeight","textTransform","textAlign","h6","body1","body2","button","fontStyle","h5","responsiveFontSizes","makeStyles","display","appBar","width","marginLeft","drawer","flexShrink","position","drawerPaper","paddingTop","paddingBottom","paper","padding","list","textDecoration","toolbar","spacing","content","flexGrow","backgroundColor","palette","background","default","height","App","state","data","d3","data_sheet","confidence_faith","faith_label","goodfaith","confidence_damage","damaging_label","damaging","anonymous","newcomer","edit_years","Date","size","parsed_comment","then","setState","basename","process","ThemeProvider","className","to","Typography","variant","path","render","match","find","e","parseInt","params","revId","map","obj","index","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f01f4830.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/data-moreinfo.76afb407.csv\";","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport \"../App.scss\";\nimport { LinearProgress } from \"@material-ui/core\";\n\nclass Diff extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  ValidateIPaddress(ipaddress) {\n    return /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(\n      ipaddress\n    );\n  }\n\n  render() {\n    const d = this.props.revision;\n    const h =\n      \"<tr class='header'><td class='before' colspan='2'>Before</td><td class='after' colspan='2'>After</td></tr>\";\n    if (d === undefined) return <LinearProgress />;\n    return (\n      <div class=\"diff\">\n        <strong>Revision ID: </strong>\n        <a\n          href={\n            \"https://en.wikipedia.org/w/index.php?title=&diff=prev&oldid=\" +\n            d.rev_id\n          }\n          target=\"_blank\"\n        >\n          {d.rev_id}\n        </a>\n        <div class=\"row\">\n          <div>\n            <strong>Article Title: </strong>\n            {d.title}\n          </div>\n        </div>\n        <h5>\n          Edited by{\" \"}\n          {this.ValidateIPaddress(d.username) ? \"Anonymous\" : d.username} at{\" \"}\n          {d.timestamp.toLocaleTimeString()} on{\" \"}\n          {d.timestamp.toLocaleDateString(undefined, {\n            weekday: \"long\",\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\",\n          })}\n        </h5>\n        {d.comment !== \"\" && (\n          <div>\n            <strong>Comment from Editor:</strong>\n            <p dangerouslySetInnerHTML={{ __html: d.comment }} />\n          </div>\n        )}\n        <table dangerouslySetInnerHTML={{ __html: h + d.diff }} />\n      </div>\n    );\n  }\n}\n\nexport default Diff;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./App.scss\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport * as d3 from \"d3\";\nimport data_sheet from \"./data/data-moreinfo.csv\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\nimport Diff from \"./components/diff\";\n\nconst drawerWidth = 270;\n\nlet theme = createMuiTheme({\n  typography: {\n    root: {\n      component: \"div\",\n    },\n    fontFamily: \"Noto Sans KR\",\n    subtitle1: {\n      fontFamily: \"Noto Serif\",\n      fontSize: \"24px\",\n    },\n    subtitle2: {\n      fontSize: \"12px\",\n      marginTop: \"10px\",\n      color: \"#B0B0B0\",\n      fontWeight: \"bold\",\n      textTransform: \"uppercase\",\n      textAlign: \"left\",\n    },\n    h6: {\n      fontWeight: \"bold\",\n      fontSize: \"16px\",\n      textAlign: \"left\",\n    },\n    body1: {\n      // textAlign: 'left',\n      fontSize: \"14px\",\n    },\n    body2: {\n      textAlign: \"left\",\n      fontSize: \"14px\",\n    },\n    button: {\n      fontStyle: \"italic\",\n    },\n    h5: {\n      fontSize: \"15px\",\n      color: \"#3777a5\",\n      fontWeight: \"bold\",\n      textTransform: \"none\",\n      textAlign: \"left\",\n    },\n  },\n});\n\ntheme = responsiveFontSizes(theme);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    // fontFamily: 'Noto Sans, sans-serif',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    textAlign: \"center\",\n    position: \"relative\",\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    paddingTop: \"35px\",\n    paddingBottom: \"35px\",\n  },\n  paper: {\n    textAlign: \"left\",\n    padding: \"20px 20px\",\n  },\n  list: {\n    fontSize: \"16px\",\n    textDecoration: \"none\",\n  },\n  // necessary for content to be below app bar\n  toolbar: {\n    padding: theme.spacing(2),\n  },\n  content: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: \"1.5vh\",\n    height: \"100vh\",\n  },\n}));\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n    };\n  }\n\n  componentDidMount() {\n    d3.csv(data_sheet, (d) => {\n      return {\n        confidence_faith: +d.confidence_faith,\n        faith_label: d.goodfaith === \"TRUE\" ? true : false,\n        confidence_damage: +d.confidence_damage,\n        damaging_label: d.damaging === \"TRUE\" ? true : false,\n        rev_id: +d.rev_id,\n        anonymous: d.anonymous === \"TRUE\" ? true : false,\n        newcomer: d.edit_years <= 8.0 ? true : false,\n        username: d.username,\n        title: d.title,\n        timestamp: new Date(d.timestamp),\n        size: +d.size,\n        comment: d.parsed_comment,\n        diff: d.diff,\n      };\n    }).then((data) => {\n      this.setState({ data: data });\n    });\n  }\n\n  render() {\n    let data = this.state.data || [];\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL + \"/\"}>\n        <ThemeProvider theme={theme}>\n          <div className=\"App\">\n            <Link to=\"/\">\n              <Typography variant=\"subtitle1\">Recent Changes</Typography>\n            </Link>\n\n            <Switch>\n              {data && data !== undefined && (\n                <Route\n                  path=\"/d/:revId\"\n                  render={({ match }) => (\n                    <Diff\n                      revision={data.find(\n                        (e) => e.rev_id === parseInt(match.params.revId)\n                      )}\n                    />\n                  )}\n                />\n              )}\n\n              <Route path=\"/\">\n                <ul>\n                  {this.state.data ? (\n                    this.state.data.map((obj, index) => (\n                      <li>\n                        <Link to={\"/d/\" + obj.rev_id}>Diff</Link> -{\" \"}\n                        <strong>{obj.title}</strong>{\" \"}\n                        {obj.timestamp.toLocaleTimeString()} ({obj.size}) . .{\" \"}\n                        {obj.username} . .{\" \"}\n                        <em dangerouslySetInnerHTML={{ __html: obj.comment }} />\n                      </li>\n                    ))\n                  ) : (\n                    <LinearProgress />\n                  )}\n                </ul>\n              </Route>\n            </Switch>\n          </div>\n        </ThemeProvider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}